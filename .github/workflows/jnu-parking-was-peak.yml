name: WAS 인프라 - 피크 타임 Scale-Up
on:
    workflow_dispatch:

env:
  IMAGE_NAME: jnuparking/jnu-parking-prod

jobs:
    prepare-variables:
        name: 워크플로우 변수 준비하기
        runs-on: ubuntu-latest
        outputs:
            image-name: ${{ steps.setup-env.outputs.image-name }}
        steps:
        - name: Github에서 레포 받아오기
          uses: actions/checkout@v3
        - name: 변수 출력하기
          id: setup-env
          run: |
            echo "image-name=$IMAGE_NAME" >> $GITHUB_OUTPUT

    modify-infra-with-terraform:
        needs: [ prepare-variables ]
        name: 인프라 스케일 업
        runs-on: ubuntu-latest
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        defaults:
            run:
                working-directory: jnu-parking-prod-was/peak
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                  terraform_version: 1.5.7
                  terraform_wrapper: false

            - name: Terraform Import
              id: improt
              run: |
                terraform import aws_eip.was-eip1 eipalloc-0bd8840069f605ca0
                terraform import aws_instance.jnu-parking-ec2-prod i-0a7e1c8e7f0b149b0
                terraform import aws_db_instance.jnu-parking-rds-prod jnu-parking-rds-prod
                terraform import aws_elasticache_replication_group.jnu-parking-redis-prod jnu-parking-redis-prod

            - name: Terraform Plan
              id: plan
              run: terraform plan -no-color
             
            # - name: Terraform Apply
            #   run: terraform apply -auto-approve

            - name: 배포 완료 슬랙 알림 보내기
              uses: 8398a7/action-slack@v3
              with:
                status: custom
                fields: author, workflowRun, pullRequest
                custom_payload: |
                    {
                        attachments: [{
                            color: '#2E289E',
                            title: '🔥 인프라 조정 알림',
                            text: `주차권 시스템 Scale-up 성공! (EC2, RDS, ElastiCache)`,
                            fields: [
                                {
                                    title: '배포자',
                                    value: `${process.env.AS_AUTHOR}`,
                                    short: true,
                                },
                                {
                                    title: '워크플로 링크',
                                    value: `${process.env.AS_WORKFLOW_RUN}`,
                                    short: true,
                                },
                            ]
                        }]
                    }
              env:
                SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    run-spring-boot:
        needs: [ prepare-variables, modify-infra-with-terraform ]
        runs-on: [ ubuntu-latest ]
        name: 스프링 부트 기동

        permissions:
            id-token: write
            contents: read

        steps:
            - name: GitHub 에서 레포 받아오기
              uses: actions/checkout@v3

            - name: 배포 스크립트 실행
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.PROD_SSH_HOST }}
                username: ${{ secrets.PROD_SSH_USERNAME }}
                key: ${{ secrets.PROD_SSH_KEY }}
                port: ${{ secrets.PROD_SSH_PORT }}
                script: |
                    sudo docker rm -f $(sudo docker ps -qa)
                    sudo docker pull ${{ needs.prepare-variables.outputs.image-name }}:latest
                    sudo docker compose up -d --env-file .env.peak
                    sudo docker image prune -f

            - name: 배포 완료 슬랙 알림 보내기
              uses: 8398a7/action-slack@v3
              with:
                status: custom
                fields: author, workflowRun, pullRequest
                custom_payload: |
                    {
                        attachments: [{
                            color: '#24C183',
                            title: '✅ Spring boot 기동 알림',
                            text: `Spring boot 기동 성공!,
                            fields: [
                                {
                                    title: '배포자',
                                    value: `${process.env.AS_AUTHOR}`,
                                    short: true,
                                },
                                {
                                    title: '워크플로 링크',
                                    value: `${process.env.AS_WORKFLOW_RUN}`,
                                    short: true,
                                },
                            ]
                        }]
                    }
              env:
                SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}